name: Publish DevContainer Image to GHCR

on:
  workflow_dispatch:
    inputs:
      devcontainer_choice:
        description: 'DevContainer to build'
        required: true
        type: choice
        options:
          - 'docker'
          - 'codex-docker'
          - 'azure'
          - 'codex'
          - 'github-cli'
          - 'wassette'
          - 'everything'
          - 'empty'
        default: 'docker'
      image_tag:
        description: 'Image tag (e.g., latest, v1.0.0)'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check if Dockerfile exists
        id: dockerfile_check
        run: |
          if [ -f ".devcontainer/${{ github.event.inputs.devcontainer_choice }}/Dockerfile" ]; then
            echo "has_dockerfile=true" >> $GITHUB_OUTPUT
          else
            echo "has_dockerfile=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image (with Dockerfile)
        if: steps.dockerfile_check.outputs.has_dockerfile == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./.devcontainer/${{ github.event.inputs.devcontainer_choice }}
          file: ./.devcontainer/${{ github.event.inputs.devcontainer_choice }}/Dockerfile
          push: true
          tags: | 
            ghcr.io/${{ github.repository }}/devcontainer-${{ github.event.inputs.devcontainer_choice }}:${{ github.event.inputs.image_tag }}
            ghcr.io/${{ github.repository }}/devcontainer-${{ github.event.inputs.devcontainer_choice }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Skip build for image-based devcontainer
        if: steps.dockerfile_check.outputs.has_dockerfile == 'false'
        run: |
          echo "::notice::Devcontainer '${{ github.event.inputs.devcontainer_choice }}' uses a pre-built image and doesn't need to be built."
          echo "This devcontainer is configured to use an existing image from its devcontainer.json file."
