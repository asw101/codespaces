name: Build All DevContainers

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag (e.g., latest, v1.0.0)'
        required: false
        default: 'latest'

jobs:
  discover-devcontainers:
    runs-on: ubuntu-latest
    outputs:
      devcontainers: ${{ steps.find-devcontainers.outputs.devcontainers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find DevContainers with Dockerfiles
        id: find-devcontainers
        run: |
          devcontainers=()
          for dir in .devcontainer/*/; do
            if [ -f "$dir/Dockerfile" ]; then
              basename=$(basename "$dir")
              devcontainers+=("\"$basename\"")
            fi
          done
          
          # Convert array to JSON format
          printf -v joined '%s,' "${devcontainers[@]}"
          json="[${joined%,}]"
          
          echo "Found devcontainers with Dockerfiles: $json"
          echo "devcontainers=$json" >> $GITHUB_OUTPUT

  build-and-push:
    needs: discover-devcontainers
    if: ${{ needs.discover-devcontainers.outputs.devcontainers != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        devcontainer: ${{ fromJson(needs.discover-devcontainers.outputs.devcontainers) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image name
        id: image-name
        run: |
          case "${{ matrix.devcontainer }}" in
            "default-container")
              echo "name=default" >> $GITHUB_OUTPUT
              ;;
            "codex-container")
              echo "name=codex" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "name=${{ matrix.devcontainer }}" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ steps.image-name.outputs.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ github.event.inputs.image_tag || 'latest' }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./.devcontainer/${{ matrix.devcontainer }}
          file: ./.devcontainer/${{ matrix.devcontainer }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.devcontainer }}
          cache-to: type=gha,mode=max,scope=${{ matrix.devcontainer }}

      - name: Output image details
        run: |
          echo "Built devcontainer: ${{ matrix.devcontainer }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"